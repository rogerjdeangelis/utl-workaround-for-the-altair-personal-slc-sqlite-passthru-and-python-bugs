%let pgm=utl-workaround-for-the-altair-personal-slc-sqlite-passthru-and-python-bugs;

%stop_submission;

Workaround for the altair personal slc sqlite passthru and python bugs

Too long to post here, see github

github
https://github.com/rogerjdeangelis/utl-workaround-for-the-altair-personal-slc-sqlite-passthru-and-python-bugs

PROBLEM

  Sum the three largest YOY growth by company using sqlite partitioning using r python excel

  Proc sql does not support partitioningor associated  windows extensions.

SOLUTIONS

 1 proc r (workaround for missing passthru support for sqlite)

 2 proc python (workaround for import/export)
   The slcd oes not support import/export with current pyhton versions.
   Workaround is to use pyreadstat and pyreader to create transport R rds file and
   then use proc r to export rds file as sas dataset,
   I tried to downgrade numpy to fix, but the downgraded numpy failed with the
   more current python version.

 3 excel
   adds sheet want to input excel workbook with solution

 4 sqlite windows extensions


/***************************************************************************************************************/
/*      INPUT                             | PROCESS                                     |        OUTPUT        */
/*      =====                             | =======                                     |       ======         */
/*                                        |                                             |             TOP 3    */
/*                                        |                                             |             YOY SUM  */
/*    COMPANY     YOY                     | Consider Company 3M                         |  COMPANY    SUMUP3P  */
/*                                        | Sorted by descending YOY only for checking  |                      */
/*      X0        0.07                    |                                             |    3I        34.75   */
/*      X0        0.10                    | COMPANY  YOY  Sum largest 3                 |    3M        80.83*  */
/*      X0        0.14                    |                                             |    3P        41.42   */
/*      3M        1.93                    |   3M    76.00                               |    X0        48.41   */
/*      X0        0.77                    |   3M     2.90 Largest 3                     |                      */
/* ..                                     |   3M     1.93 76+2.90+1.93 = 80.83          |                      */
/*      X0       10.80                    |   3M     1.93                               |                      */
/*      3I       23.13                    |   3M     1.48                               |                      */
/*      X0        1.95                    |   3M     1.20                               |                      */
/*      X0       18.94                    |                                             |                      */
/*      3M        1.20                    |--------------------------------------------------------------------*/
/*                                        |                                             |                      */
/*                                        | 1 R SQLITE (python & excel below)           |  R                   */
/* options validvarname=upcase ;          | =================================           |  company sumup3      */
/* libname sd1 "d:/sd1" ;                 |                                             |       3I  34.75      */
/* data sd1.have ;                        | proc datasets lib=sd1 nolist nodetails;     |       3M  80.83      */
/*  input company$ yoy  @@ ;              |  delete want;                               |       3P  41.42      */
/* cards4;                                | run;quit;                                   |       X0  48.41      */
/* X0 00.07  X0 00.10  X0 00.14  3M 01.93 |                                             |                      */
/* X0 00.77  X0 00.00  X0 00.12  3M 01.48 | %utl_rbeginx;                               |  SAS                 */
/* X0 02.50  X0 06.81  X0 00.08  3M 02.90 | parmcards4;                                 |  COMPANY    SUMUP3   */
/* X0 00.57  X0 01.25  X0 00.12  3M 01.93 | library(haven)                              |                      */
/* X0 00.35  X0 00.58  X0 00.21  3M 76.00 | library(sqldf)                              |    3I        34.75   */
/* X0 01.95  X0 00.18  X0 01.95  3P 04.87 | source("c:/oto/fn_tosas9x.R")               |    3M        80.83   */
/* X0 01.85  X0 00.18  X0 06.81  3P 01.20 | options(sqldf.dll = "d:/dll/sqlean.dll")    |    3P        41.42   */
/* X0 00.10  X0 01.05  X0 00.06  3P 05.56 | have<-read_sas("d:/sd1/have.sas7bdat")      |    X0        48.41   */
/* X0 00.50  X0 00.36  X0 01.19  3P 02.11 | print(have)                                 |                      */
/* X0 10.76  X0 01.39  X0 00.58  3P 04.58 | want<-sqldf('                               |                      */
/* X0 00.37  X0 00.07  X0 01.05  3P 02.24 |   with                                      |                      */
/* X0 00.01  X0 00.64  X0 01.39  3P 00.34 |     prep as (                               |                      */
/* X0 09.26  X0 00.07  X0 00.33  3P 02.74 |   select                                    |                      */
/* X0 00.61  X0 00.33  3I 02.73  3P 03.47 |     company                                 |                      */
/* X0 00.13  X0 00.17  3I 01.39  3P 04.59 |    ,yoy                                     |                      */
/* X0 00.14  X0 18.67  3I 01.59  3P 21.92 |    ,row_number() over (                     |                      */
/* X0 00.08  X0 01.65  3I 08.12  3P 02.04 |         partition by company                |                      */
/* X0 00.12  X0 00.77  3I 02.57  3P 04.65 |         order by yoy desc                   |                      */
/* X0 00.03  X0 02.50  3I 01.75  3P 03.58 |     ) as rank                               |                      */
/* X0 01.65  X0 00.57  3I 02.07  3P 13.94 |  from                                       |                      */
/* X0 00.21  X0 00.35  3I 03.50           |     have )                                  |                      */
/* X0 00.03  X0 01.95  3I 01.90           |  select                                     |                      */
/* X0 00.04  X0 01.85  3I 02.07           |     company                                 |                      */
/* X0 00.03  X0 10.80  3I 23.13           |    ,sum(yoy) as sumup3                      |                      */
/* X0 01.95  X0 18.94  3M 01.20           |  from                                       |                      */
/* ;;;;                                   |     prep                                    |                      */
/* run;quit;                              |  where                                      |                      */
/*                                        |     rank <= 3                               |                      */
/*                                        |  group                                      |                      */
/*                                        |     by company                              |                      */
/*                                        | ')                                          |                      */
/*                                        | want                                        |                      */
/*                                        | fn_tosas9x(                                 |                      */
/*                                        |       inp    = want                         |                      */
/*                                        |      ,outlib ="d:/sd1/"                     |                      */
/*                                        |      ,outdsn ="want"                        |                      */
/*                                        |      )                                      |                      */
/*                                        | ;;;;                                        |                      */
/*                                        | %utl_rendx;                                 |                      */
/*                                        |                                             |                      */
/*                                        | proc print data=sd1.want;                   |                      */
/*                                        | run;quit;                                   |                      */
/*                                        |                                             |                      */
/***************************************************************************************************************/

/*                   _
(_)_ __  _ __  _   _| |_
| | `_ \| `_ \| | | | __|
| | | | | |_) | |_| | |_
|_|_| |_| .__/ \__,_|\__|
        |_|
*/

&_init_;

options validvarname=upcase ;
data have ;
 input company$ yoy  @@ ;
cards4;
X0 00.07  X0 00.10  X0 00.14  3M 01.93
X0 00.77  X0 00.00  X0 00.12  3M 01.48
X0 02.50  X0 06.81  X0 00.08  3M 02.90
X0 00.57  X0 01.25  X0 00.12  3M 01.93
X0 00.35  X0 00.58  X0 00.21  3M 76.00
X0 01.95  X0 00.18  X0 01.95  3P 04.87
X0 01.85  X0 00.18  X0 06.81  3P 01.20
X0 00.10  X0 01.05  X0 00.06  3P 05.56
X0 00.50  X0 00.36  X0 01.19  3P 02.11
X0 10.76  X0 01.39  X0 00.58  3P 04.58
X0 00.37  X0 00.07  X0 01.05  3P 02.24
X0 00.01  X0 00.64  X0 01.39  3P 00.34
X0 09.26  X0 00.07  X0 00.33  3P 02.74
X0 00.61  X0 00.33  3I 02.73  3P 03.47
X0 00.13  X0 00.17  3I 01.39  3P 04.59
X0 00.14  X0 18.67  3I 01.59  3P 21.92
X0 00.08  X0 01.65  3I 08.12  3P 02.04
X0 00.12  X0 00.77  3I 02.57  3P 04.65
X0 00.03  X0 02.50  3I 01.75  3P 03.58
X0 01.65  X0 00.57  3I 02.07  3P 13.94
X0 00.21  X0 00.35  3I 03.50
X0 00.03  X0 01.95  3I 01.90
X0 00.04  X0 01.85  3I 02.07
X0 00.03  X0 10.80  3I 23.13
X0 01.95  X0 18.94  3M 01.20
;;;;
run;quit;

proc print data=have(obs=5);
run;quit;

/*           _               _
  ___  _   _| |_ _ __  _   _| |_
 / _ \| | | | __| `_ \| | | | __|
| (_) | |_| | |_| |_) | |_| | |_
 \___/ \__,_|\__| .__/ \__,_|\__|
                |_|
*/

Altair SLC

Obs    COMPANY    YOY

 1       X0       0.07  first 4
 2       X0       0.10
 3       X0       0.14
 4       3M       1.93
....
92       3I      23.13  last 4
93       X0       1.95
94       X0      18.94
95       3M       1.20

/*
| | ___   __ _
| |/ _ \ / _` |
| | (_) | (_| |
|_|\___/ \__, |
         |___/
*/

6         &_init_;
7
8         options validvarname=upcase ;
9         data have ;
10         input company$ yoy  @@ ;
11        cards4;

NOTE: A new line was read when INPUT statement read past the end of a line
NOTE: Data set "WORK.have" has 95 observation(s) and 2 variable(s)
NOTE: The data step took :
      real time : 0.003
      cpu time  : 0.000


12        X0 00.07  X0 00.10  X0 00.14  3M 01.93
13        X0 00.77  X0 00.00  X0 00.12  3M 01.48
14        X0 02.50  X0 06.81  X0 00.08  3M 02.90
15        X0 00.57  X0 01.25  X0 00.12  3M 01.93
16        X0 00.35  X0 00.58  X0 00.21  3M 76.00
17        X0 01.95  X0 00.18  X0 01.95  3P 04.87
18        X0 01.85  X0 00.18  X0 06.81  3P 01.20
19        X0 00.10  X0 01.05  X0 00.06  3P 05.56
20        X0 00.50  X0 00.36  X0 01.19  3P 02.11
21        X0 10.76  X0 01.39  X0 00.58  3P 04.58
22        X0 00.37  X0 00.07  X0 01.05  3P 02.24
23        X0 00.01  X0 00.64  X0 01.39  3P 00.34
24        X0 09.26  X0 00.07  X0 00.33  3P 02.74
25        X0 00.61  X0 00.33  3I 02.73  3P 03.47
26        X0 00.13  X0 00.17  3I 01.39  3P 04.59
27        X0 00.14  X0 18.67  3I 01.59  3P 21.92
28        X0 00.08  X0 01.65  3I 08.12  3P 02.04
29        X0 00.12  X0 00.77  3I 02.57  3P 04.65
30        X0 00.03  X0 02.50  3I 01.75  3P 03.58
31        X0 01.65  X0 00.57  3I 02.07  3P 13.94
32        X0 00.21  X0 00.35  3I 03.50
33        X0 00.03  X0 01.95  3I 01.90
34        X0 00.04  X0 01.85  3I 02.07
35        X0 00.03  X0 10.80  3I 23.13
36        X0 01.95  X0 18.94  3M 01.20
37        ;;;;
38        run;quit;
39
40        proc print data=have(obs=5);
41        run;quit;
NOTE: 5 observations were read from "WORK.have"
NOTE: Procedure print step took :
      real time : 0.016
      cpu time  : 0.000


42        quit; run;
43        ODS _ALL_ CLOSE;
44        FILENAME WBGSF CLEAR;

/*                    _ _ _
/ |  _ __   ___  __ _| (_) |_ ___
| | | `__| / __|/ _` | | | __/ _ \
| | | |    \__ \ (_| | | | ||  __/
|_| |_|    |___/\__, |_|_|\__\___|
                   |_|
*/

&_init_;

proc datasets lib=work nolist nodetails;
 delete want;
run;quit;

options set=RHOME "D:\d451";
proc r;
export data=have r=have;
submit;
library(sqldf)
options(sqldf.dll = "d:/dll/sqlean.dll")
want<-sqldf('
  with
    prep as (
  select
    company
   ,yoy
   ,row_number() over (
        partition by company
        order by yoy desc
    ) as rank
 from
    have )
 select
    company
   ,sum(yoy) as sumup3
 from
    prep
 where
    rank <= 3
 group
    by company
')
want
endsubmit;
import data=want r=want;
run;quit;

proc print data=want;
run;quit;

/*           _               _
  ___  _   _| |_ _ __  _   _| |_
 / _ \| | | | __| `_ \| | | | __|
| (_) | |_| | |_| |_) | |_| | |_
 \___/ \__,_|\__| .__/ \__,_|\__|
                |_|
*/

Altair SLC

Obs    COMPANY    SUMUP3

 1       3I        34.75
 2       3M        80.83
 3       3P        41.42
 4       X0        48.41

/*
| | ___   __ _
| |/ _ \ / _` |
| | (_) | (_| |
|_|\___/ \__, |
         |___/
*/

1280      ODS _ALL_ CLOSE;
1281      ODS LISTING;
1282      FILENAME WBGSF 'd:\wpswrk\_TD27364/listing_images';
1283      OPTIONS DEVICE=GIF;
1284      GOPTIONS GSFNAME=WBGSF;
1285
1286      &_init_;
1287
1288      proc datasets lib=work nolist nodetails;
1289       delete want;
1290      run;quit;
NOTE: Deleting "WORK.WANT" (memtype="DATA")
NOTE: Procedure datasets step took :
      real time : 0.001
      cpu time  : 0.000


1291
1292      options set=RHOME "D:\d451";
1293      proc r;
NOTE: Using R version 4.5.1 (2025-06-13 ucrt) from d:\r451
1294      export data=have r=have;
NOTE: Creating R data frame 'have' from data set 'WORK.have'

1295      submit;
1296      library(sqldf)
1297      options(sqldf.dll = "d:/dll/sqlean.dll")
1298      want<-sqldf('
1299        with
1300          prep as (
1301        select
1302          company
1303         ,yoy
1304         ,row_number() over (
1305              partition by company
1306              order by yoy desc
1307          ) as rank
1308       from
1309          have )
1310       select
1311          company
1312         ,sum(yoy) as sumup3
1313       from
1314          prep
1315       where
1316          rank <= 3
1317       group
1318          by company
1319      ')
1320      want
1321      endsubmit;

NOTE: Submitting statements to R:

Loading required package: gsubfn
Loading required package: proto
Loading required package: RSQLite
> library(sqldf)
> options(sqldf.dll = "d:/dll/sqlean.dll")
> want<-sqldf('
+   with
+     prep as (
+   select
+     company
+    ,yoy
+    ,row_number() over (
+         partition by company
+         order by yoy desc
+     ) as rank
+  from
+     have )
+  select
+     company
+    ,sum(yoy) as sumup3
+  from
+     prep
+  where
+     rank <= 3
+  group
+     by company
+ ')

NOTE: Processing of R statements complete

> want
1322      import data=want r=want;
NOTE: Creating data set 'WORK.want' from R data frame 'want'
NOTE: Column names modified during import of 'want'
NOTE: Data set "WORK.want" has 4 observation(s) and 2 variable(s)

1323      run;quit;
NOTE: Procedure r step took :
      real time : 1.322
      cpu time  : 0.015


1324
1325      proc print data=want;
1326      run;quit;
NOTE: 4 observations were read from "WORK.want"
NOTE: Procedure print step took :
      real time : 0.006
      cpu time  : 0.000


1327
1328      quit; run;
1329      ODS _ALL_ CLOSE;
1330      FILENAME WBGSF CLEAR;

/*___                _   _
|___ \   _ __  _   _| |_| |__   ___  _ __
  __) | | `_ \| | | | __| `_ \ / _ \| `_ \
 / __/  | |_) | |_| | |_| | | | (_) | | | |
|_____| | .__/ \__, |\__|_| |_|\___/|_| |_|
        |_|    |___/
*/
&_init_;

libanme sd1 sas7bdat "d:/sd1";

options validvarname=upcase ;
data sd1.have ;
 input company$ yoy  @@ ;
cards4;
X0 00.07  X0 00.10  X0 00.14  3M 01.93
X0 00.77  X0 00.00  X0 00.12  3M 01.48
X0 02.50  X0 06.81  X0 00.08  3M 02.90
X0 00.57  X0 01.25  X0 00.12  3M 01.93
X0 00.35  X0 00.58  X0 00.21  3M 76.00
X0 01.95  X0 00.18  X0 01.95  3P 04.87
X0 01.85  X0 00.18  X0 06.81  3P 01.20
X0 00.10  X0 01.05  X0 00.06  3P 05.56
X0 00.50  X0 00.36  X0 01.19  3P 02.11
X0 10.76  X0 01.39  X0 00.58  3P 04.58
X0 00.37  X0 00.07  X0 01.05  3P 02.24
X0 00.01  X0 00.64  X0 01.39  3P 00.34
X0 09.26  X0 00.07  X0 00.33  3P 02.74
X0 00.61  X0 00.33  3I 02.73  3P 03.47
X0 00.13  X0 00.17  3I 01.39  3P 04.59
X0 00.14  X0 18.67  3I 01.59  3P 21.92
X0 00.08  X0 01.65  3I 08.12  3P 02.04
X0 00.12  X0 00.77  3I 02.57  3P 04.65
X0 00.03  X0 02.50  3I 01.75  3P 03.58
X0 01.65  X0 00.57  3I 02.07  3P 13.94
X0 00.21  X0 00.35  3I 03.50
X0 00.03  X0 01.95  3I 01.90
X0 00.04  X0 01.85  3I 02.07
X0 00.03  X0 10.80  3I 23.13
X0 01.95  X0 18.94  3M 01.20
;;;;
run;quit;

proc print data=have(obs=5);
run;quit;

proc datasets lib=work nolist nodetails;
 delete want;
run;quit;

options set=PYTHONHOME "D:\python310";
proc python;
submit;
import pyreadstat as ps
import pandas as pd
import pyreadr as pr
exec(open('c:/wpsoto/fn_pythonx.py').read());
have,meta = ps.read_sas7bdat('d:/sd1/have.sas7bdat')
print(have)
pywant=pdsql('''
  with
    prep as (
  select
    company
   ,yoy
   ,row_number() over (
        partition by company
        order by yoy desc
    ) as rank
 from
    have )
 select
    company
   ,sum(yoy) as sumup3
 from
    prep
 where
    rank <= 3
 group
    by company
   ''')
print(pywant)
pr.write_rds('d:/rds/pywant.rds',pywant)
endsubmit;
run;quit;
/*---- CONVERT RDS FILE TO A SAS TABLE ----*/

options noerrorabend;
options set=RHOME "D:\d451";
%wps_py2sastable(
   inp=d:/rds/pywant.rds
  ,out=want );

proc print data=want;
run;quit;
/*           _               _
  ___  _   _| |_ _ __  _   _| |_
 / _ \| | | | __| `_ \| | | | __|
| (_) | |_| | |_| |_) | |_| | |_
 \___/ \__,_|\__| .__/ \__,_|\__|
                |_|
*/
Altair SLC

Obs    COMPANY    SUMUP3

 1       3I        34.75
 2       3M        80.83
 3       3P        41.42
 4       X0        48.41

 /*
| | ___   __ _
| |/ _ \ / _` |
| | (_) | (_| |
|_|\___/ \__, |
         |___/
*/

1280      ODS _ALL_ CLOSE;
1281      ODS LISTING;
1282      FILENAME WBGSF 'd:\wpswrk\_TD27364/listing_images';
1283      OPTIONS DEVICE=GIF;
1284      GOPTIONS GSFNAME=WBGSF;
1285
1286      &_init_;
1287
1288      proc datasets lib=work nolist nodetails;
1289       delete want;
1290      run;quit;
NOTE: Deleting "WORK.WANT" (memtype="DATA")
NOTE: Procedure datasets step took :
      real time : 0.001
      cpu time  : 0.000


1291
1292      options set=RHOME "D:\d451";
1293      proc r;
NOTE: Using R version 4.5.1 (2025-06-13 ucrt) from d:\r451
1294      export data=have r=have;
NOTE: Creating R data frame 'have' from data set 'WORK.have'

1295      submit;
1296      library(sqldf)
1297      options(sqldf.dll = "d:/dll/sqlean.dll")
1298      want<-sqldf('
1299        with
1300          prep as (
1301        select
1302          company
1303         ,yoy
1304         ,row_number() over (
1305              partition by company
1306              order by yoy desc
1307          ) as rank
1308       from
1309          have )
1310       select
1311          company
1312         ,sum(yoy) as sumup3
1313       from
1314          prep
1315       where
1316          rank <= 3
1317       group
1318          by company
1319      ')
1320      want
1321      endsubmit;

NOTE: Submitting statements to R:

Loading required package: gsubfn
Loading required package: proto
Loading required package: RSQLite
> library(sqldf)
> options(sqldf.dll = "d:/dll/sqlean.dll")
> want<-sqldf('
+   with
+     prep as (
+   select
+     company
+    ,yoy
+    ,row_number() over (
+         partition by company
+         order by yoy desc
+     ) as rank
+  from
+     have )
+  select
+     company
+    ,sum(yoy) as sumup3
+  from
+     prep
+  where
+     rank <= 3
+  group
+     by company
+ ')

NOTE: Processing of R statements complete

> want
1322      import data=want r=want;
NOTE: Creating data set 'WORK.want' from R data frame 'want'
NOTE: Column names modified during import of 'want'
NOTE: Data set "WORK.want" has 4 observation(s) and 2 variable(s)

1323      run;quit;
NOTE: Procedure r step took :
      real time : 1.322
      cpu time  : 0.015


1324
1325      proc print data=want;
1326      run;quit;
NOTE: 4 observations were read from "WORK.want"
NOTE: Procedure print step took :
      real time : 0.006
      cpu time  : 0.000


1327
1328      quit; run;
1329      ODS _ALL_ CLOSE;
1330      FILENAME WBGSF CLEAR;

/*____                     _
|___ /    _____  _____ ___| |
  |_ \   / _ \ \/ / __/ _ \ |
 ___) | |  __/>  < (_|  __/ |
|____/   \___/_/\_\___\___|_|
 _                   _
(_)_ __  _ __  _   _| |_
| | `_ \| `_ \| | | | __|
| | | | | |_) | |_| | |_
|_|_| |_| .__/ \__,_|\__|
        |_|
*/
%utlfkil(d:/xls/have.xlsx);

libname xls excel "d:/xls/have.xlsx";

data xls.have;
  set sd1.have;
run;quit;

libname xls clear;


-----------------------+
| A1| fx    |DAYNUM    |
-------------------------+
[_] |    A     |    B    |
-------------------------|
 1  | COMPANY  |  YOY    |
 -- |----------+---------|
 2  |  X0      | 0.07    |
 -- |----------+---------|
 3  |  X0      | 0.1     |
 -- |----------+---------|
 4  |  X0      | 0.14    |
 -- |----------+---------|
 5  |  3M      | 1.93    |
 -- |----------+---------|
 6  |  X0      | 0.77    |
 -- |----------+---------|
 7  |  ....    | ....    |
 -- |----------+---------|

/*
 _ __  _ __ ___   ___ ___  ___ ___
| `_ \| `__/ _ \ / __/ _ \/ __/ __|
| |_) | | | (_) | (_|  __/\__ \__ \
| .__/|_|  \___/ \___\___||___/___/
|_|
*/

proc r;
submit;
library(openxlsx)
library(sqldf)
source("c:/oto/fn_tosas9x.R")
wb<-loadWorkbook("d:/xls/have.xlsx")
have<-read.xlsx(wb,"have")
addWorksheet(wb, "want")
want <- sqldf('
  with
    prep as (
  select
    company
   ,yoy
   ,row_number() over (
        partition by company
        order by yoy desc
    ) as rank
 from
    have )
 select
    company
   ,sum(yoy) as sumup3
 from
    prep
 where
    rank <= 3
 group
    by company
');
 writeData(wb,sheet="want",x=want)
 saveWorkbook(
     wb
    ,"d:/xls/have.xlsx"
    ,overwrite=TRUE)
endsubmit;
run;quit;

/*           _               _
  ___  _   _| |_ _ __  _   _| |_
 / _ \| | | | __| `_ \| | | | __|
| (_) | |_| | |_| |_) | |_| | |_
 \___/ \__,_|\__| .__/ \__,_|\__|
                |_|
*/

-----------------------+
| A1| fx    |DAYNUM    |
-------------------------+
[_] |    A     |    B    |
-------------------------|
 1  | COMPANY  | SUMTOP3 |
 -- |----------+---------|
 2  |  31      | 34.75   |
 -- |----------+---------|
 3  |  3M      | 80.83   |
 -- |----------+---------|
 4  |  3P      | 41.42   |
 -- |----------+---------|
 5  |  XO      | 48.41   |
 -- |----------+---------+

/*  _               _ _ _          __                  _   _
| || |    ___  __ _| (_) |_ ___   / _|_   _ _ __   ___| |_(_) ___  _ __  ___
| || |_  / __|/ _` | | | __/ _ \ | |_| | | | `_ \ / __| __| |/ _ \| `_ \/ __|
|__   _| \__ \ (_| | | | ||  __/ |  _| |_| | | | | (__| |_| | (_) | | | \__ \
   |_|   |___/\__, |_|_|\__\___| |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/
                 |_|
*/

/**************************************************************************************************************************************/
/*   NOTE SOME OF THESE FUNCTION ARE ONLY AVAILABLE ON THE SQLITE COMMAND LINE (IE MODE)                                              */
/*               name          define_free    json_group_array      math_ceil           radians            stddev       time_fmt_iso  */
/*                 ->              degrees   json_group_object       math_cos            random        stddev_pop      time_fmt_time  */
/*                ->>           dense_rank         json_insert      math_cosh        randomblob       stddev_samp           time_get  */
/*                abs           difference         json_object   math_degrees              rank             stdev       time_get_day  */
/*               acos         dlevenshtein          json_patch       math_exp          readfile         strfilter      time_get_hour  */
/*              acosh                dur_h         json_pretty     math_floor            regexp          strftime   time_get_isoweek  */
/*                age                dur_m          json_quote        math_ln    regexp_capture        string_agg   time_get_isoyear  */
/*               asin               dur_ms         json_remove       math_log       regexp_like            strpos    time_get_minute  */
/*              asinh               dur_ns        json_replace     math_log10    regexp_replace            substr     time_get_month  */
/*               atan                dur_s            json_set      math_log2     regexp_substr         substring      time_get_nano  */
/*              atan2               dur_us           json_type       math_mod            repeat           subtype    time_get_second  */
/*              atanh        edit_distance          json_valid        math_pi           replace               sum   time_get_weekday  */
/*               atn2               encode               jsonb       math_pow         replicate           symlink      time_get_year  */
/*                avg                 eval         jsonb_array   math_radians           reverse               tan   time_get_yearday  */
/*         bit_length                  exp       jsonb_extract     math_round             right              tanh         time_micro  */
/*             blake3        fileio_append   jsonb_group_array       math_sin          rightstr      text_bitsize         time_milli  */
/*               bm25         fileio_mkdir  jsonb_group_object      math_sinh             round     text_casefold          time_nano  */
/*              btrim          fileio_mode        jsonb_insert      math_sqrt        row_number       text_concat           time_now  */
/*           casefold          fileio_read        jsonb_object       math_tan              rpad     text_contains         time_parse  */
/*         caverphone       fileio_symlink         jsonb_patch      math_tanh          rsoundex        text_count         time_round  */
/*               ceil         fileio_write        jsonb_remove     math_trunc        rtreecheck   text_has_prefix         time_since  */
/*            ceiling          first_value       jsonb_replace            max        rtreedepth   text_has_suffix           time_sub  */
/*            changes                floor           jsonb_set            md5         rtreenode        text_index      time_to_micro  */
/*               char               format           julianday         median             rtrim         text_join      time_to_milli  */
/*        char_length       fts3_tokenizer                 lag            min       script_code   text_last_index       time_to_nano  */
/*   character_length                 fts5   last_insert_rowid          mkdir              sha1         text_left       time_to_unix  */
/*          charindex      fts5_get_locale          last_value            mod            sha256       text_length         time_trunc  */
/*           coalesce          fts5_locale                lead          .mode            sha384         text_like          time_unix  */
/*             concat       fts5_source_id                left          nlike            sha512        text_lower         time_until  */
/*          concat_ws          fuzzy_caver             leftstr         nlower              sign         text_lpad           timediff  */
/*                cos         fuzzy_damlev              length            now               sin        text_ltrim       to_timestamp  */
/*               cosh       fuzzy_editdist         levenshtein      nth_value              sinh       text_repeat              total  */
/*                cot        fuzzy_hamming                like          ntile           snippet      text_replace      total_changes  */
/*               coth        fuzzy_jarowin          likelihood         nullif           soundex      text_reverse          translate  */
/*              count          fuzzy_leven              likely         nupper        split_part        text_right           translit  */
/*      crypto_blake3        fuzzy_osadist                  ln   octet_length    sqlean_version         text_rpad               trim  */
/*      crypto_decode       fuzzy_phonetic      load_extension        offsets        sqlite_log        text_rtrim              trunc  */
/*      crypto_encode       fuzzy_rsoundex                 log       optimize  sqlite_source_id         text_size             typeof  */
/*         crypto_md5         fuzzy_script               log10   osa_distance    sqlite_version        text_slice           unaccent  */
/*        crypto_sha1        fuzzy_soundex                log2           padc              sqrt        text_split           undefine  */
/*      crypto_sha256       fuzzy_translit               lower           padl            square    text_substring              unhex  */
/*      crypto_sha384      gen_random_uuid      lower_quartile           padr       starts_with        text_title            unicode  */
/*      crypto_sha512                 glob                lpad   percent_rank      stats_median    text_translate    unicode_version  */
/*          cume_dist         group_concat              lsmode     percentile         stats_p25         text_trim          unixepoch  */
/*       current_date              hamming               ltrim  percentile_25         stats_p75        text_upper           unlikely  */
/*       current_time                  hex           make_date  percentile_75         stats_p90              time              upper  */
/*  current_timestamp            highlight      make_timestamp  percentile_90         stats_p95          time_add     upper_quartile  */
/*               date               ifnull               match  percentile_95         stats_p99     time_add_date              uuid4  */
/*           date_add                  iif           matchinfo  percentile_99        stats_perc        time_after              uuid7  */
/*          date_part                instr           math_acos  phonetic_hash      stats_stddev       time_before         uuid_blob   */
/*         date_trunc         jaro_winkler          math_acosh             pi  stats_stddev_pop      time_compare          uuid_str   */
/*           datetime                 json           math_asin            pow stats_stddev_samp         time_date           var_pop   */
/*             decode           json_array          math_asinh          power         stats_var        time_equal          var_samp   */
/*             define    json_array_length           math_atan         printf     stats_var_pop     time_fmt_date          variance   */
/*       define_cache  json_error_position          math_atan2         proper    stats_var_samp time_fmt_datetime         writefile   */
/*       json_extract           math_atanh          quote                                                                  zeroblob   */
/********************************* *****************************************************************************************************/

/*              _
  ___ _ __   __| |
 / _ \ `_ \ / _` |
|  __/ | | | (_| |
 \___|_| |_|\__,_|

*/

